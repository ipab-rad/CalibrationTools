<launch>
    <arg name="camera_name" default="fsp_l">
      <choice value="fsp_l"/>
      <choice value="lspf_r"/>
      <choice value="lspr_l"/>
      <choice value="rsp_l"/>
      <choice value="rspf_l"/>
      <choice value="rspr_r"/>
    </arg>

    <arg name="pointcloud_topic" default="/sensor/lidar/top/points"/>
    <arg name="lidar_frame" default="lidar_ouster_top"/>
    <arg name="lidar_model" default="os1_128" description="this lidar must be supported by the lidartag package"/>
    <arg name="view_only_ui" default="true" description="By default we use a minimal UI"/>
    <arg name="calibration_pairs" default="8" description="Number of lidar-image pairs for the calibration to converge"/>
    <arg name="calibration_pairs_min_distance" default="1.5" description="Minimum allowed between a new detection and current pairs"/>

    <let name="camera_frame" value="camera_$(var camera_name)_optical"/>
    <let name="image_rect_color_compressed_topic" value="/sensor/camera/$(var camera_name)/image_rect_color/compressed"/>
    <let name="image_rect_color_decompressed_topic" value="/sensor/camera/$(var camera_name)/image_rect_color/decompressed"/>
    <let name="image_rect_color_topic" value="/sensor/camera/$(var camera_name)/image_rect_color"/>
    <let name="camera_info_topic" value="/sensor/camera/$(var camera_name)/camera_info"/>
    <let name="use_rectified_image" value="false"/>
    <let name="rviz_profile" value="$(find-pkg-share tag_based_pnp_calibrator)/rviz/lxo_profile.rviz"/>
  
    <!-- image decompressor -->
    <node pkg="image_transport_decompressor" exec="image_transport_decompressor_node" name="decompressor" output="screen">
      <remap from="decompressor/input/compressed_image" to="$(var image_rect_color_compressed_topic)"/>
      <remap from="decompressor/output/raw_image" to="$(var image_rect_color_decompressed_topic)"/>
      <param name="encoding" value="default"/>
    </node>
  
    <!-- tag based calibrator -->
    <include file="$(find-pkg-share tag_based_pnp_calibrator)/launch/calibrator.launch.xml">
      <!-- <arg name="image_topic" value="$(var image_rect_color_topic)"/> -->
      <arg name="image_topic" value="$(var image_rect_color_decompressed_topic)"/>
      <arg name="camera_info_topic" value="$(var camera_info_topic)"/>
      <arg name="pointcloud_topic" value="$(var pointcloud_topic)"/>
      <arg name="pointcloud_topic_ex" value="$(var camera_info_topic)"/>
      <arg name="lidar_model" value="$(var lidar_model)"/>
      <arg name="use_rectified_image" value="$(var use_rectified_image)"/>
      <arg name="calibration_service_name" value="calibrate_camera_lidar"/>
    </include>
  
    <!-- interactive calibrator -->
    <node pkg="interactive_camera_lidar_calibrator" exec="interactive_calibrator" name="interactive_calibrator" output="screen" if="$(eval &quot;'$(var view_only_ui)' == 'false' &quot;)">
      <remap from="pointcloud" to="$(var pointcloud_topic)"/>
      <remap from="image" to="$(var image_rect_color_compressed_topic)"/>
      <remap from="camera_info" to="$(var camera_info_topic)"/>
      <remap from="calibration_points_input" to="calibration_points"/>
  
      <param name="camera_frame" value="$(var camera_frame)"/>
      <param name="use_calibration_api" value="false"/>
      <param name="can_publish_tf" value="false"/>
    </node>
  
    <!-- camera view -->
    <node pkg="tier4_calibration_views" exec="image_view_node.py" name="image_view_node_py" output="screen" if="$(eval &quot;'$(var view_only_ui)' == 'true' &quot;)">
      <remap from="pointcloud" to="$(var pointcloud_topic)"/>
      <remap from="image" to="$(var image_rect_color_compressed_topic)"/>
      <remap from="camera_info" to="$(var camera_info_topic)"/>
      <remap from="calibration_points_input" to="calibration_points"/>
    </node>
  
    <!-- create a placeholder lidar frame to make the rviz profile generic -->
    <node pkg="tf2_ros" exec="static_transform_publisher" name="estimated_base_link_broadcaster" output="screen" args="0 0 0 0 0 0 $(var lidar_frame) lidar_frame"/>
  
    <!-- remap the pointcloud topic to make the rviz profile generic -->
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen" args="-d $(var rviz_profile)">
      <remap from="pointcloud_topic_placeholder" to="$(var pointcloud_topic)"/>
    </node>
  </launch>
  